name: Setup
description: Setup pnpm cache
outputs:
  PNPM_VERSION:
    description: "pnpm version"
    value: ${{ steps.pnpm-version.outputs.PNPM_VERSION }}
  STORE_PATH:
    description: "pnpm store path"
    value: ${{ steps.pnpm-store-path.outputs.STORE_PATH }}
  NODE_VERSION:
    description: "node version"
    value: ${{ steps.node-version.outputs.NODE_VERSION }}
runs:
  using: "composite"
  steps:
    - id: pnpm-version
      name: Get pnpm version from root package.json
      shell: bash
      run: |
        echo "PNPM_VERSION=$(grep '"packageManager"' package.json | cut -d '"' -f4 | cut -d '@' -f2))" >> $GITHUB_OUTPUT
    - id: node-version
      name: Get node version from .nvmrc
      shell: bash
      run: |
        echo "NODE_VERSION=$(head -n 1 .nvmrc)" >> $GITHUB_OUTPUT
    - uses: pnpm/action-setup@v2
      name: Install pnpm
      with:
        version: ${{ env.PNPM_VERSION }}
        run_install: false
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: "pnpm"
    - name: Get pnpm store directory
      id: pnpm-store-path
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
    - uses: actions/cache@v3
      name: Setup pnpm cache
      env:
        STORE_PATH: ${{ steps.pnpm-store-path.outputs.STORE_PATH }}
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      shell: bash
